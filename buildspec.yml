version: 0.2

phases:
  install:
    commands:
      - echo No Install phase
  pre_build:
    commands:
      - echo No Pre Build phase
  build:
    commands:
      - echo Build started on `date`
      - FUNC_NAME1="2175051-test-task1-lambda"
      - FUNC_NAME2="2175051-test-task2-lambda"
      - FUNC_NAME3="2175051-test-task3-lambda"
      - FUNC_CURRENTVER1=$(echo $(aws lambda get-alias --function-name ${FUNC_NAME1} --name prod | grep FunctionVersion | tail -1 |tr -cd 0-9))
      - FUNC_CURRENTVER2=$(echo $(aws lambda get-alias --function-name ${FUNC_NAME2} --name prod | grep FunctionVersion | tail -1 |tr -cd 0-9))
      - FUNC_CURRENTVER3=$(echo $(aws lambda get-alias --function-name ${FUNC_NAME3} --name prod | grep FunctionVersion | tail -1 |tr -cd 0-9))
      - SM_NAME1="arn:aws:states:ap-northeast-1:477460359712:stateMachine:2175051-test-MyStateMachine"
      - SM_NAME2="arn:aws:states:ap-northeast-1:477460359712:stateMachine:2175051-Lower-MyStateMachine"
      - SM_NAME3="arn:aws:states:ap-northeast-1:477460359712:stateMachine:2175051-Upper-MyStateMachine"
      - "SF_CURRENTVER1=$(echo $(aws stepfunctions describe-state-machine-alias --state-machine-alias-arn ${SM_NAME1}:prod | grep stateMachineVersionArn | tail -1 | cut -d : -f 9 | tr -cd 0-9))"
      - "SF_CURRENTVER2=$(echo $(aws stepfunctions describe-state-machine-alias --state-machine-alias-arn ${SM_NAME2}:prod | grep stateMachineVersionArn | tail -1 | cut -d : -f 9 | tr -cd 0-9))"
      - "SF_CURRENTVER3=$(echo $(aws stepfunctions describe-state-machine-alias --state-machine-alias-arn ${SM_NAME3}:prod | grep stateMachineVersionArn | tail -1 | cut -d : -f 9 | tr -cd 0-9))"
      
      - cd lambda/task1
      - zip -r lambda.zip ./*
      - aws lambda update-function-code --function-name ${FUNC_NAME1} --zip-file fileb://lambda.zip
      - cd ../task2
      - zip -r lambda.zip ./*
      - aws lambda update-function-code --function-name ${FUNC_NAME2} --zip-file fileb://lambda.zip
      - cd ../task3
      - zip -r lambda.zip ./*
      - aws lambda update-function-code --function-name ${FUNC_NAME3} --zip-file fileb://lambda.zip
      - cd ../../stepfunctions

      - "aws stepfunctions update-state-machine --state-machine-arn ${SM_NAME1} --definition file://lower1_definition.json"
      - "aws stepfunctions update-state-machine --state-machine-arn ${SM_NAME2} --definition file://lower2_definition.json"
      - "aws stepfunctions update-state-machine --state-machine-arn ${SM_NAME3} --definition file://upper_definition.json"
      - cd ../
      - sleep 10
  post_build:
    commands:
      - echo Build completed on `date`
      - ls
      - aws lambda publish-version --function-name ${FUNC_NAME1} --description "update version"
      - FUNC_TARGETVER1=$(echo $(aws lambda list-versions-by-function --function-name ${FUNC_NAME1} | grep Version | tail -1 | tr -cd 0-9))
      - echo "current ver.${FUNC_CURRENTVER1} >> target ver.${FUNC_TARGETVER1}"
      - aws lambda update-alias --function-name ${FUNC_NAME1} --name prod --function-version ${FUNC_TARGETVER1}
#      - aws lambda delete-function --function-name ${FUNC_NAME1} --qualifier ${FUNC_CURRENTVER1}
      - aws lambda publish-version --function-name ${FUNC_NAME2} --description "update version"
      - FUNC_TARGETVER2=$(echo $(aws lambda list-versions-by-function --function-name ${FUNC_NAME2} | grep Version | tail -1 | tr -cd 0-9))
      - echo "current ver.${FUNC_CURRENTVER2} >> target ver.${FUNC_TARGETVER2}"
      - aws lambda update-alias --function-name ${FUNC_NAME2} --name prod --function-version ${FUNC_TARGETVER2}
#      - aws lambda delete-function --function-name ${FUNC_NAME2} --qualifier ${FUNC_CURRENTVER2}
      - aws lambda publish-version --function-name ${FUNC_NAME3} --description "update version"
      - FUNC_TARGETVER3=$(echo $(aws lambda list-versions-by-function --function-name ${FUNC_NAME3} | grep Version | tail -1 | tr -cd 0-9))
      - echo "current ver.${FUNC_CURRENTVER3} >> target ver.${FUNC_TARGETVER3}"
      - aws lambda update-alias --function-name ${FUNC_NAME3} --name prod --function-version ${FUNC_TARGETVER3}
#      - aws lambda delete-function --function-name ${FUNC_NAME3} --qualifier ${FUNC_CURRENTVER3}


      - "aws stepfunctions publish-state-machine-version --state-machine-arn ${SM_NAME1} --description 'update version'"
      - "SM_TARGETVER1=$(echo $(aws stepfunctions list-state-machine-versions --state-machine-arn ${SM_NAME1} | grep stateMachineVersionArn | head -1 | cut -d : -f 9 | tr -cd 0-9))"
      - echo "current ver.${SM_CURRENTVER1} >> target ver.${SM_TARGETVER1}"
      - "aws stepfunctions update-state-machine-alias --state-machine-alias-arn ${SM_NAME1}:prod --routing-configuration stateMachineVersionArn=${SM_NAME1}:${SM_TARGETVER1},weight=100"
#      - "aws stepfunctions delete-state-machine-version --state-machine-version-arn ${SM_NAME1}:${SM_CURRENTVER1}"